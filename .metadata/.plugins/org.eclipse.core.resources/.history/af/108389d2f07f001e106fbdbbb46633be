package demo;

import java.text.MessageFormat;

import org.apache.camel.Processor;
import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.component.websocket.WebsocketComponent;

public class MainRouteBuilder extends RouteBuilder {

	private int port;
	private String[] backends;
	private int backendPort ;
	private String serverId;
	private String frontendHost;
	private int frontendPort;

	public MainRouteBuilder(int backendPort, String serverId, String frontendHost, int frontendPort) {
		this.backendPort = backendPort;
		this.serverId = serverId;
		this.frontendHost = frontendHost;
		this.frontendPort = frontendPort;
	}

	@Override
	public void configure() throws Exception {
		var component = getContext().getComponent("websocket", WebsocketComponent.class);
		component.setPort(port);
		
		from("file:data/in")
		.setHeader("transformation").simple("${header.fileName}")
		.convertBodyTo(String.class)
		.log("Invoking transformation '${header.transformation}'.")
		.process(debug())
		.loadBalance()
		.roundRobin()
		.to(backends);
		
		from("websocket:reply")
		.convertBodyTo(String.class)
		.log("Received processed file from transformation '${header.transformation}' from backend server ${header.serverId}")
		.process(debug())
		.toD("file:data/out?fileName=${header.fileName}");
	}
	
	private static Processor debug() {
		return exchange -> {
			System.out.println(exchange.getIn().getBody());
		};
	}

}
